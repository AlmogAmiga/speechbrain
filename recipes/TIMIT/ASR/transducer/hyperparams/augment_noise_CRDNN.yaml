# ############################################################################
# Model: E2E ASR with Transducer ASR
# Encoder: CRDNN model
# Decoder: LiGRU + beamsearch
# losses: Transducer
# Training: TIMIT
# Authors:  Abdel Heba, Mirco Ravanelli 2020
# ############################################################################

# Seed needs to be set at top of yaml, before objects with parameters are made
seed: 7
__set_seed: !!python/object/apply:torch.manual_seed [!ref <seed>]
output_folder: !ref results/augment_noise_CRDNN/<seed>
wer_file: !ref <output_folder>/wer.txt
save_folder: !ref <output_folder>/save
train_log: !ref <output_folder>/train_log.txt

# Data files
data_folder: !PLACEHOLDER  # e.g. /path/to/TIMIT
csv_train: !ref <data_folder>/train.csv
csv_valid: !ref <data_folder>/dev.csv
csv_test: !ref <data_folder>/test.csv
openrir_folder: !PLACEHOLDER # e.g. /path/to/RIRS

# Training parameters
number_of_epochs: 50
batch_size: 8
lr: 1.0
device: 'cuda:0'
ddp_procs: 0  # Set this to number of GPUs for multi-GPU

# Feature parameters
sample_rate: 16000
n_fft: 400
n_mels: 40

# Model parameters
activation: !name:torch.nn.LeakyReLU
dropout: 0.15
cnn_blocks: 2
cnn_channels: (128, 256)
cnn_kernelsize: (3, 3)
rnn_layers: 4
rnn_neurons: 512
rnn_bidirectional: True
dnn_blocks: 2
dnn_neurons: 512
emb_size: 128
dec_neurons: 128

# Outputs
output_neurons: 40
joint_dim: 128
blank_index: !ref <output_neurons> - 1

# Decoding parameters
beam: 1
nbest: 1

epoch_counter: !new:speechbrain.utils.epoch_loop.EpochCounter
    limit: !ref <number_of_epochs>

train_loader: !new:speechbrain.data_io.data_io.DataLoaderFactory
    csv_file: !ref <csv_train>
    batch_size: !ref <batch_size>
    sentence_sorting: ascending
    output_folder: !ref <output_folder>
    csv_read: [wav, phn]

valid_loader: !new:speechbrain.data_io.data_io.DataLoaderFactory
    csv_file: !ref <csv_valid>
    batch_size: !ref <batch_size>
    sentence_sorting: ascending
    output_folder: !ref <output_folder>
    csv_read: [wav, phn]

test_loader: !new:speechbrain.data_io.data_io.DataLoaderFactory
    csv_file: !ref <csv_test>
    batch_size: !ref <batch_size>
    sentence_sorting: ascending
    output_folder: !ref <output_folder>
    csv_read: [wav, phn]

normalize: !new:speechbrain.processing.InputNormalization
    norm_type: global

augmentation: !new:speechbrain.lobes.TimeDomainSpecAugment
    sample_rate: !ref <sample_rate>
    speeds: [95, 100, 105]

env_corrupt: !new:speechbrain.lobes.augment.env_corrupt.EnvCorrupt
    openrir_folder: !ref <openrir_folder>
    babble_prob: 0.0
    reverb_prob: 0.0
    noise_prob: 1.0
    noise_snr_low: 0
    noise_snr_high: 15

compute_features: !new:speechbrain.lobes.Fbank
    sample_rate: !ref <sample_rate>
    n_fft: !ref <n_fft>
    n_mels: !ref <n_mels>

enc: !new:speechbrain.lobes.CRDNN
    input_shape: [null, null, !ref <n_mels>]
    activation: !ref <activation>
    dropout: !ref <dropout>
    cnn_blocks: !ref <cnn_blocks>
    cnn_channels: !ref <cnn_channels>
    cnn_kernelsize: !ref <cnn_kernelsize>
    time_pooling: True
    rnn_layers: !ref <rnn_layers>
    rnn_neurons: !ref <rnn_neurons>
    rnn_bidirectional: !ref <rnn_bidirectional>
    dnn_blocks: !ref <dnn_blocks>
    dnn_neurons: !ref <dnn_neurons>

enc_lin: !new:speechbrain.nnet.linear.Linear
    input_size: !ref <dnn_neurons>
    n_neurons: !ref <joint_dim>
    bias: False

emb: !new:speechbrain.nnet.Embedding
    num_embeddings: !ref <output_neurons>
    consider_as_one_hot: True
    blank_id: !ref <blank_index>
    #embedding_dim: !ref <emb_size>

dec: !new:speechbrain.nnet.LiGRU
    input_shape: [null, null, !ref <output_neurons> - 1]
    hidden_size: !ref <dec_neurons>
    num_layers: 1
    dropout: 0.15
    normalization: layernorm
    bidirectional: False

dec_lin: !new:speechbrain.nnet.linear.Linear
    input_size: !ref <dec_neurons>
    n_neurons: !ref <joint_dim>
    bias: False

Tjoint: !new:speechbrain.nnet.transducer.transducer_joint.Transducer_joint
    joint: sum # joint [sum | concat]
    nonlinearity: !ref <activation>

output: !new:speechbrain.nnet.linear.Linear
    input_size: 128
    n_neurons: !ref <output_neurons>  # 42 phonemes + 1 blank
    bias: False

log_softmax: !new:speechbrain.nnet.Softmax
    apply_log: True

compute_cost: !name:speechbrain.nnet.losses.transducer_loss
    blank_index: !ref <blank_index>

model: !new:torch.nn.ModuleList [[
    !ref <enc>,
    !ref <enc_lin>,
    !ref <emb>,
    !ref <dec>,
    !ref <dec_lin>,
    !ref <output>
]]

opt_class: !name:torch.optim.Adadelta
    rho: 0.95
    eps: 1.e-8
    lr: !ref <lr>

lr_annealing: !new:speechbrain.nnet.NewBobScheduler
    initial_value: !ref <lr>
    improvement_threshold: 0.0025
    annealing_factor: 0.8
    patient: 0

modules:
    enc: !ref <enc>
    enc_lin: !ref <enc_lin>
    emb: !ref <emb>
    dec: !ref <dec>
    dec_lin: !ref <dec_lin>
    Tjoint: !ref <Tjoint>
    output: !ref <output>
    normalize: !ref <normalize>
    env_corrupt: !ref <env_corrupt>
    augmentation: !ref <augmentation>

jit_module_keys: [enc]

checkpointer: !new:speechbrain.Checkpointer
    checkpoints_dir: !ref <save_folder>
    recoverables:
        model: !ref <model>
        normalize: !ref <normalize>
        lr_annealing: !ref <lr_annealing>
        counter: !ref <epoch_counter>

train_logger: !new:speechbrain.FileTrainLogger
    save_file: !ref <train_log>

transducer_stats: !name:speechbrain.MetricStats
    metric: !name:speechbrain.nnet.losses.transducer_loss
        blank_index: !ref <blank_index>
        reduction: none

per_stats: !name:speechbrain.ErrorRateStats
