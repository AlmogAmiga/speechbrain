# Seed needs to be set at top of yaml, before objects with parameters are made
seed: 1234
__set_seed: !apply:torch.manual_seed [!ref <seed>]
output_folder: !ref results/augment_noise_CRDNN/<seed>
wer_file: !ref <output_folder>/wer.txt
save_folder: !ref <output_folder>/save
train_log: !ref <output_folder>/train_log.txt

# Data files
data_folder: /media/sam/HitachiX360/TIMIT/  # e.g. /path/to/TIMIT

# Training parameters
number_of_epochs: 50
batch_size: 8
lr: 0.001
ctc_weight: 0.2

# For DDP, use `python -m speechbrain.ddp experiment.py` to launch experiment
# These options will be set by that script, and will override these.
device: 'cuda:0'
multigpu_count: 0  # Set to number of GPUs if multi-gpu
multigpu_backend: null  # ['data_parallel', 'ddp_nccl', 'ddp_gloo', 'ddp_mpi']

# Feature parameters
sample_rate: 16000
n_fft: 400
n_mels: 40

# Model parameters
activation: !name:torch.nn.LeakyReLU
dropout: 0.15
cnn_blocks: 2
cnn_channels: (128, 256)
cnn_kernelsize: (3, 3)
rnn_layers: 4
rnn_neurons: 512
rnn_bidirectional: True
dnn_blocks: 2
dnn_neurons: 512
emb_size: 128
dec_neurons: 256

# Outputs
output_neurons: 41
blank_index: 1
eos_bos_index: 0

# Decoding parameters
bos_index: !ref <eos_bos_index>
eos_index: !ref <eos_bos_index>
min_decode_ratio: 0.0
max_decode_ratio: 1.0
beam_size: 16
eos_threshold: 1.5

epoch_counter: !new:speechbrain.utils.epoch_loop.EpochCounter
    limit: !ref <number_of_epochs>


label_encoder: !new:speechbrain.data_io.encoder.TextEncoder

common_dynamic_items:
    phn_list:
        func: !name:speechbrain.utils.data_utils.split_by_whitespace
        argkeys: [phn]
    phn_encoded_list:
        func: !ref <label_encoder.encode_sequence>
        argkeys: [phn_list]
    phn_encoded:
        func: !name:speechbrain.data_io.data_io.to_longTensor
        argkeys: [phn_encoded_list]
    phn_encoded_eos:
        func: !new:speechbrain.utils.data_utils.FuncPipeline
            - !ref <label_encoder.append_eos_index>
            - !name:speechbrain.data_io.data_io.to_longTensor
        argkeys: [phn_encoded_list]
    phn_encoded_bos:
        func: !new:speechbrain.utils.data_utils.FuncPipeline
            - !ref <label_encoder.prepend_bos_index>
            - !name:speechbrain.data_io.data_io.to_longTensor
        argkeys: [phn_encoded_list]
    sig:
        func: !name:speechbrain.data_io.data_io.read_audio
        argkeys: [wav]
common_output_keys: ["id", "sig", "phn_encoded", "phn_encoded_eos", "phn_encoded_bos"]

train_data: !apply:speechbrain.data_io.dataset.DynamicItemDataset.from_csv
    csv_path: !ref <data_folder>/train.csv
    replacements:
        data_root: !ref <data_folder>
    dynamic_items: !ref <common_dynamic_items>
    output_keys: !ref <common_output_keys>
train_loader: !new:speechbrain.data_io.dataloader.SaveableDataLoader
    dataset: !ref <train_data>
    batch_size: !ref <batch_size>
    shuffle: False # we use ordered batches for better performance

valid_data: !apply:speechbrain.data_io.dataset.DynamicItemDataset.from_csv
    csv_path: !ref <data_folder>/dev.csv
    replacements:
        data_root: !ref <data_folder>
    dynamic_items: !ref <common_dynamic_items>
    output_keys: !ref <common_output_keys>
valid_loader: !new:speechbrain.data_io.dataloader.SaveableDataLoader
    dataset: !ref <valid_data>
    batch_size: !ref <batch_size>
    shuffle: False

test_data: !apply:speechbrain.data_io.dataset.DynamicItemDataset.from_csv
    csv_path: !ref <data_folder>/test.csv
    replacements:
        data_root: !ref <data_folder>
    dynamic_items: !ref <common_dynamic_items>
    output_keys: !ref <common_output_keys>
test_loader: !new:speechbrain.data_io.dataloader.SaveableDataLoader
    dataset: !ref <valid_data>
    batch_size: !ref <batch_size>
    shuffle: False

normalize: !new:speechbrain.processing.features.InputNormalization
    norm_type: global

augmentation: !new:speechbrain.lobes.augment.TimeDomainSpecAugment
    sample_rate: !ref <sample_rate>
    speeds: [95, 100, 105]

# Can be removed to speed up training a little
env_corrupt: !new:speechbrain.lobes.augment.EnvCorrupt
    openrir_folder: !ref <data_folder>
    babble_prob: 0.0
    reverb_prob: 0.0
    noise_prob: 1.0
    noise_snr_low: 0
    noise_snr_high: 15

compute_features: !new:speechbrain.lobes.features.Fbank
    sample_rate: !ref <sample_rate>
    n_fft: !ref <n_fft>
    n_mels: !ref <n_mels>

enc: !new:speechbrain.lobes.models.CRDNN.CRDNN
    input_shape: [null, null, !ref <n_mels>]
    activation: !ref <activation>
    dropout: !ref <dropout>
    cnn_blocks: !ref <cnn_blocks>
    cnn_channels: !ref <cnn_channels>
    cnn_kernelsize: !ref <cnn_kernelsize>
    time_pooling: True
    rnn_layers: !ref <rnn_layers>
    rnn_neurons: !ref <rnn_neurons>
    rnn_bidirectional: !ref <rnn_bidirectional>
    dnn_blocks: !ref <dnn_blocks>
    dnn_neurons: !ref <dnn_neurons>

emb: !new:speechbrain.nnet.embedding.Embedding
    num_embeddings: !ref <output_neurons>
    embedding_dim: !ref <emb_size>

dec: !new:speechbrain.nnet.RNN.AttentionalRNNDecoder
    enc_dim: !ref <dnn_neurons>
    input_size: !ref <emb_size>
    rnn_type: gru
    attn_type: location
    hidden_size: !ref <dec_neurons>
    attn_dim: 256
    num_layers: 1
    scaling: 1.0
    channels: 10
    kernel_size: 100
    re_init: True
    dropout: 0.5

ctc_lin: !new:speechbrain.nnet.linear.Linear
    input_size: !ref <dnn_neurons>
    n_neurons: !ref <output_neurons>  # 39 phonemes + 1 blank

seq_lin: !new:speechbrain.nnet.linear.Linear
    input_size: !ref <dec_neurons>
    n_neurons: !ref <output_neurons>  # 39 phonemes + 1 eos

log_softmax: !new:speechbrain.nnet.activations.Softmax
    apply_log: True

ctc_cost: !name:speechbrain.nnet.losses.ctc_loss
    blank_index: !ref <blank_index>

seq_cost: !name:speechbrain.nnet.losses.nll_loss
    label_smoothing: 0.1

greedy_searcher: !new:speechbrain.decoders.seq2seq.S2SRNNGreedySearcher
    embedding: !ref <emb>
    decoder: !ref <dec>
    linear: !ref <seq_lin>
    bos_index: !ref <eos_bos_index>
    eos_index: !ref <eos_bos_index>
    min_decode_ratio: !ref <min_decode_ratio>
    max_decode_ratio: !ref <max_decode_ratio>

beam_searcher: !new:speechbrain.decoders.seq2seq.S2SRNNBeamSearcher
    embedding: !ref <emb>
    decoder: !ref <dec>
    linear: !ref <seq_lin>
    bos_index: !ref <eos_bos_index>
    eos_index: !ref <eos_bos_index>
    min_decode_ratio: !ref <min_decode_ratio>
    max_decode_ratio: !ref <max_decode_ratio>
    beam_size: !ref <beam_size>

model: !new:torch.nn.ModuleList
    - [!ref <enc>, !ref <emb>, !ref <dec>, !ref <ctc_lin>, !ref <seq_lin>]

opt_class: !name:torch.optim.Adam
    lr: !ref <lr>

lr_annealing: !new:speechbrain.nnet.schedulers.NewBobScheduler
    initial_value: !ref <lr>
    improvement_threshold: 0.0025
    annealing_factor: 0.8
    patient: 0

modules:
    enc: !ref <enc>
    emb: !ref <emb>
    dec: !ref <dec>
    ctc_lin: !ref <ctc_lin>
    seq_lin: !ref <seq_lin>
    normalize: !ref <normalize>

jit_module_keys: [enc]

checkpointer: !new:speechbrain.utils.checkpoints.Checkpointer
    checkpoints_dir: !ref <save_folder>
    recoverables:
        model: !ref <model>
        normalize: !ref <normalize>
        lr_annealing: !ref <lr_annealing>
        counter: !ref <epoch_counter>

train_logger: !new:speechbrain.utils.train_logger.FileTrainLogger
    save_file: !ref <train_log>

ctc_stats: !name:speechbrain.utils.metric_stats.MetricStats
    metric: !name:speechbrain.nnet.losses.ctc_loss
        blank_index: !ref <blank_index>
        reduction: batch

seq_stats: !name:speechbrain.utils.metric_stats.MetricStats
    metric: !name:speechbrain.nnet.losses.nll_loss
        label_smoothing: 0.1
        reduction: batch

per_stats: !name:speechbrain.utils.metric_stats.ErrorRateStats
