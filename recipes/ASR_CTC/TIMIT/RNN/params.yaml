constants:

    # Basic parameters
    output_folder: exp/TIMIT_CTC
    device: cuda
    sample_rate: 16000
    seed: 1234
    verbosity: 2

    # Data files
    data_file: /home/peter/Downloads/TIMIT.tar.gz
    local_folder: /tmp/timit_experiment
    csv_train: !ref <constants.local_folder>/train.csv
    csv_valid: !ref <constants.local_folder>/dev.csv
    csv_test: !ref <constants.local_folder>/test.csv

    # Neural Parameters
    N_epochs: 28
    N_batch: 16
    lr: 0.0005

saveables:
    model: !torch.nn.Sequential
        - !speechbrain.nnet.architectures.RNN_basic
            rnn_type: ligru
            n_neurons: 1024
            nonlinearity: relu
            num_layers: 5
            dropout: 0.3
            bidirectional: True
        - !speechbrain.nnet.architectures.linear
            n_neurons: 49 # 48 phonemes + blank (at the end)
            bias: False
        - !speechbrain.nnet.architectures.activation
            act_type: log_softmax
    lr_annealing: !speechbrain.nnet.lr_scheduling.lr_annealing
        annealing_type: newbob
        N_epochs: !ref <constants.N_epochs>
        lr_initial: !ref <constants.lr>
        improvement_threshold: 0.0025
        annealing_factor: 0.8
        patient: 0
    optimizer: !speechbrain.nnet.optimizers.optimize
        do_recovery: True
        optimizer_type: adam
        learning_rate: !ref <constants.lr>
    epoch_counter: !speechbrain.utils.epoch_loop.EpochCounter
        limit: !ref <constants.N_epochs>

functions:
    copy_locally: !speechbrain.data_io.data_preparation.copy_data_locally
        data_file: !ref <constants.data_file>
        local_folder: !ref <constants.local_folder>
    prepare_timit: !speechbrain.data_io.data_preparation.timit_prepare
        data_folder: !ref <constants.local_folder>
        splits: [train, test, dev]
        save_folder: !ref <constants.local_folder>
    train_loader: !speechbrain.data_io.data_io.create_dataloader &loader
        csv_file: !ref <constants.csv_train>
        batch_size: !ref <constants.N_batch>
        sentence_sorting: ascending
        output_folder: !ref <constants.output_folder>
        csv_read: [wav, phn]
    valid_loader: !speechbrain.data_io.data_io.create_dataloader
        <<: *loader
        csv_file: !ref <constants.csv_valid>
    test_loader: !speechbrain.data_io.data_io.create_dataloader
        <<: *loader
        csv_file: !ref <constants.csv_test>
        batch_size: 1
    compute_features: !speechbrain.lobes.features.Features
        feature_type: mfcc
        compute_STFT:
            sample_rate: !ref <constants.sample_rate>
    compute_cost: !speechbrain.nnet.losses.compute_cost
        cost_type: [ctc]
    compute_cost_wer: !speechbrain.nnet.losses.compute_cost
        cost_type: [ctc, wer]
