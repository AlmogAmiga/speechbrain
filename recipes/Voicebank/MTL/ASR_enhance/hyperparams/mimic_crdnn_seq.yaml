# ################################
# Model: VGG2 + LiGRU with time pooling for efficiency
# Additions: TimeDomainSpecAugment
# Authors: Mirco Ravanelli & Peter Plantinga 2020
# ################################

# Seed needs to be set at top of yaml, before objects with parameters are made
seed: 1251
__set_seed: !!python/object/apply:torch.manual_seed [!ref <seed>]
output_folder: !ref results/mimic_crdnn_seq/<seed>
stats_file: !ref <output_folder>/stats.txt
save_folder: !ref <output_folder>/save
train_log: !ref <output_folder>/train_log.txt

# Data files
data_folder: !PLACEHOLDER  # e.g. /path/to/TIMIT
csv_train: !ref <data_folder>/train.csv
csv_valid: !ref <data_folder>/valid.csv
csv_test: !ref <data_folder>/test.csv

# Training parameters
number_of_epochs: 50
batch_size: 8
lr: 0.0001
device: 'cuda:0'
multigpu_count: 0  # Set to number of GPUs if multi-gpu

# Loss weights
enhance_type: masking  # null, mapping, masking
enhance_weight: 1.0
mimic_weight: 0.2
ctc_weight: 0.0
ctc_type: null  # null, clean, joint
seq_weight: 0.0
seq_type: null  # null, clean, joint
alignment_weight: 0.0
label_smoothing: 0.1

# Set this to the path of a pretrained model to load before training
pretrained_path:
    # enhance_model: results/mimic_crdnn_seq/enhance_model.ckpt
    src_embedding: crdnn_seq_base10_final/src_embedding.ckpt

frozen_models: [src_embedding]

# Feature parameters
sample_rate: 16000
n_fft: 512
win_length: 32
hop_length: 16
emb_size: 128

# Masker parameters
emb_channels: 1024
emb_kernel_size: 3
emb_padding: same
enhancer_size: 512
enhancer_layers: 8
enhancer_heads: 8
enhancer_causal: False
enhancer_activation: !name:torch.nn.LeakyReLU
enhancer_output_activation: !name:torch.nn.ReLU
enhancer_drop_rate: 0.1

# Src embedding parameters
src_activation: !name:torch.nn.LeakyReLU
src_dropout: 0.0
cnn_blocks: 2
cnn_channels: (128, 128)
cnn_kernelsize: (3, 3)
rnn_layers: 4
rnn_neurons: 512
rnn_bidirectional: True
dnn_blocks: 2
dnn_neurons: 512

# Recognizer params
dec_neurons: 256
dec_rnn_type: gru
dec_attn_type: location
dec_attn_dim: 256

# Outputs
output_neurons: 42
blank_index: !ref <output_neurons> - 1
bos_index: !ref <output_neurons> - 1
eos_index: !ref <output_neurons> - 1

epoch_counter: !new:speechbrain.EpochCounter
    limit: !ref <number_of_epochs>

train_loader: !new:speechbrain.data_io.DataLoaderFactory
    csv_file: !ref <csv_train>
    batch_size: !ref <batch_size>
    sentence_sorting: ascending
    output_folder: !ref <output_folder>
    csv_read: [noisy_wav, clean_wav, phn]
    avoid_if_longer_than: 8

valid_loader: !new:speechbrain.data_io.DataLoaderFactory
    csv_file: !ref <csv_valid>
    batch_size: !ref <batch_size>
    sentence_sorting: ascending
    output_folder: !ref <output_folder>
    csv_read: [noisy_wav, clean_wav, phn]

test_loader: !new:speechbrain.data_io.DataLoaderFactory
    csv_file: !ref <csv_test>
    batch_size: !ref <batch_size>
    sentence_sorting: ascending
    output_folder: !ref <output_folder>
    csv_read: [noisy_wav, clean_wav, phn]

compute_stft: !new:speechbrain.processing.STFT
    sample_rate: !ref <sample_rate>
    n_fft: !ref <n_fft>
    win_length: !ref <win_length>
    hop_length: !ref <hop_length>

compute_istft: !new:speechbrain.processing.ISTFT
    sample_rate: !ref <sample_rate>
    n_fft: !ref <n_fft>
    win_length: !ref <win_length>
    hop_length: !ref <hop_length>

spectral_magnitude: !name:speechbrain.processing.spectral_magnitude
    power: 0.5

resynth: !name:speechbrain.processing.resynthesize
    stft: !ref <compute_stft>
    istft: !ref <compute_istft>

embedding_module: !new:embedding.CNNEmbedding
    input_shape: [null, null, !ref <n_fft> // 2 + 1]
    base_channels: !ref <emb_channels>

enhance_model: !new:speechbrain.lobes.CNNTransformerSE
    output_size: !ref <n_fft> // 2 + 1
    input_size: !ref <n_fft> // 2
    d_model: !ref <n_fft> // 2
    output_activation: !ref <enhancer_output_activation>
    activation: !ref <enhancer_activation>
    dropout: !ref <enhancer_drop_rate>
    num_layers: !ref <enhancer_layers>
    d_ffn: !ref <enhancer_size>
    nhead: !ref <enhancer_heads>
    causal: !ref <enhancer_causal>
    custom_emb_module: !ref <embedding_module>

src_embedding: !new:CRDNN.CRDNN
    input_shape: [null, null, !ref <n_fft> // 2 + 1]
    activation: !ref <src_activation>
    dropout: !ref <src_dropout>
    cnn_blocks: !ref <cnn_blocks>
    cnn_channels: !ref <cnn_channels>
    cnn_kernelsize: !ref <cnn_kernelsize>
    time_pooling: False
    rnn_layers: !ref <rnn_layers>
    rnn_neurons: !ref <rnn_neurons>
    rnn_bidirectional: !ref <rnn_bidirectional>
    dnn_blocks: !ref <dnn_blocks>
    dnn_neurons: !ref <dnn_neurons>

tgt_embedding: !new:speechbrain.nnet.embedding.Embedding
    num_embeddings: !ref <output_neurons>
    embedding_dim: !ref <emb_size>

recognizer: !new:speechbrain.nnet.AttentionalRNNDecoder
    rnn_type: !ref <dec_rnn_type>
    attn_type: !ref <dec_attn_type>
    enc_dim: !ref <dnn_neurons>
    input_size: !ref <emb_size>
    hidden_size: !ref <dec_neurons>
    attn_dim: !ref <dec_attn_dim>
    channels: 10
    kernel_size: 100
    num_layers: 1

ctc_output: !new:speechbrain.nnet.Linear
    input_size: !ref <dnn_neurons>
    n_neurons: !ref <output_neurons>

seq_output: !new:speechbrain.nnet.Linear
    input_size: !ref <dec_neurons>
    n_neurons: !ref <output_neurons>

log_softmax: !new:speechbrain.nnet.Softmax
    apply_log: True

beam_searcher: !new:speechbrain.decoders.seq2seq.S2SRNNBeamSearcher
    embedding: !ref <tgt_embedding>
    decoder: !ref <recognizer>
    linear: !ref <seq_output>
    bos_index: !ref <bos_index>
    eos_index: !ref <eos_index>
    min_decode_ratio: 0
    max_decode_ratio: 1
    beam_size: 16

opt_class: !name:torch.optim.Adam
    lr: !ref <lr>

lr_annealing: !new:speechbrain.nnet.NewBobScheduler
    initial_value: !ref <lr>
    improvement_threshold: 0.0025
    annealing_factor: 0.8
    patient: 0

modules:
    enhance_model: !ref <enhance_model>
    src_embedding: !ref <src_embedding>
    tgt_embedding: !ref <tgt_embedding>
    recognizer: !ref <recognizer>
    ctc_output: !ref <ctc_output>
    seq_output: !ref <seq_output>

jit_module_keys: [src_embedding]

checkpointer: !new:speechbrain.Checkpointer
    checkpoints_dir: !ref <save_folder>
    recoverables:
        enhance_model: !ref <enhance_model>
        counter: !ref <epoch_counter>
        lr_annealing: !ref <lr_annealing>

enhance_loss: !name:speechbrain.nnet.mse_loss
mimic_loss: !name:speechbrain.nnet.mse_loss
ctc_loss: !name:speechbrain.nnet.ctc_loss
    blank_index: !ref <blank_index>
seq_loss: !name:speechbrain.nnet.nll_loss
    label_smoothing: !ref <label_smoothing>

enhance_stats: !name:speechbrain.MetricStats
    metric: !name:speechbrain.nnet.mse_loss
        reduction: batch
stoi_stats: !name:speechbrain.MetricStats
    metric: !name:speechbrain.nnet.loss.stoi_loss.stoi_loss
        reduction: batch
mimic_stats: !name:speechbrain.MetricStats
    metric: !name:speechbrain.nnet.mse_loss
        reduction: batch
ctc_stats: !name:speechbrain.MetricStats
    metric: !name:speechbrain.nnet.ctc_loss
        blank_index: !ref <blank_index>
        reduction: batch
seq_stats: !name:speechbrain.MetricStats
    metric: !name:speechbrain.nnet.nll_loss
        label_smoothing: !ref <label_smoothing>
        reduction: batch
per_stats: !name:speechbrain.ErrorRateStats

train_logger: !new:speechbrain.FileTrainLogger
    save_file: !ref <train_log>
