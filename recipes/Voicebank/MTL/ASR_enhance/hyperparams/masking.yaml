# ################################
# Model: VGG2 + LiGRU with time pooling for efficiency
# Additions: TimeDomainSpecAugment
# Authors: Mirco Ravanelli & Peter Plantinga 2020
# ################################

# Seed needs to be set at top of yaml, before objects with parameters are made
seed: 1245
__set_seed: !!python/object/apply:torch.manual_seed [!ref <seed>]
output_folder: !ref results/mapping/<seed>
stats_file: !ref <output_folder>/stats.txt
save_folder: !ref <output_folder>/save
train_log: !ref <output_folder>/train_log.txt

# Data files
data_folder: !PLACEHOLDER  # e.g. /path/to/TIMIT
csv_train: !ref <data_folder>/train.csv
csv_valid: !ref <data_folder>/valid.csv
csv_test: !ref <data_folder>/test.csv

# Training parameters
number_of_epochs: 55
batch_size: 8
lr: 0.00001
device: 'cuda:0'
multigpu_count: 0  # Set to number of GPUs if multi-gpu

# Loss weights
enhance_type: mapping  # null, mapping, masking
enhance_weight: 1.0
mimic_weight: 0.0
ctc_weight: 0.0
ctc_type: null  # null, clean, joint
seq_weight: 0.0
seq_type: null  # null, clean, joint
alignment_weight: 0.0
label_smoothing: 0.1

# Set this to the path of a pretrained model to load before training
pretrained_path: {}
frozen_models: []

# Feature parameters
sample_rate: 16000
n_fft: 512
win_length: 32
hop_length: 16
emb_size: 128

# Masker parameters
emb_channels: 1024
emb_kernel_size: 3
emb_padding: same
enhancer_size: 512
enhancer_layers: 8
enhancer_heads: 8
enhancer_causal: False
enhancer_activation: !name:torch.nn.LeakyReLU
enhancer_output_activation: !name:torch.nn.ReLU
enhancer_drop_rate: 0.1

epoch_counter: !new:speechbrain.EpochCounter
    limit: !ref <number_of_epochs>

train_loader: !new:speechbrain.data_io.DataLoaderFactory
    csv_file: !ref <csv_train>
    batch_size: !ref <batch_size>
    sentence_sorting: ascending
    output_folder: !ref <output_folder>
    csv_read: [noisy_wav, clean_wav, phn]

valid_loader: !new:speechbrain.data_io.DataLoaderFactory
    csv_file: !ref <csv_valid>
    batch_size: !ref <batch_size>
    sentence_sorting: ascending
    output_folder: !ref <output_folder>
    csv_read: [noisy_wav, clean_wav, phn]

test_loader: !new:speechbrain.data_io.DataLoaderFactory
    csv_file: !ref <csv_test>
    batch_size: !ref <batch_size>
    sentence_sorting: ascending
    output_folder: !ref <output_folder>
    csv_read: [noisy_wav, clean_wav, phn]

compute_stft: !new:speechbrain.processing.STFT
    sample_rate: !ref <sample_rate>
    n_fft: !ref <n_fft>
    win_length: !ref <win_length>
    hop_length: !ref <hop_length>

compute_istft: !new:speechbrain.processing.ISTFT
    sample_rate: !ref <sample_rate>
    n_fft: !ref <n_fft>
    win_length: !ref <win_length>
    hop_length: !ref <hop_length>

spectral_magnitude: !name:speechbrain.processing.spectral_magnitude
    power: 0.5

resynth: !name:speechbrain.processing.resynthesize
    stft: !ref <compute_stft>
    istft: !ref <compute_istft>

enhance_model: !new:resnet.ResNet
    input_shape: [null, null, !ref <n_fft> // 2 + 1]
    output_size: !ref <n_fft> // 2 + 1

opt_class: !name:torch.optim.Adam
    lr: !ref <lr>

modules:
    enhance_model: !ref <enhance_model>

checkpointer: !new:speechbrain.Checkpointer
    checkpoints_dir: !ref <save_folder>
    recoverables:
        enhance_model: !ref <enhance_model>
        counter: !ref <epoch_counter>

enhance_loss: !name:speechbrain.nnet.mse_loss

enhance_stats: !name:speechbrain.MetricStats
    metric: !name:speechbrain.nnet.mse_loss
        reduction: batch
stoi_stats: !name:speechbrain.MetricStats
    metric: !name:speechbrain.nnet.loss.stoi_loss.stoi_loss
        reduction: batch

train_logger: !new:speechbrain.FileTrainLogger
    save_file: !ref <train_log>
