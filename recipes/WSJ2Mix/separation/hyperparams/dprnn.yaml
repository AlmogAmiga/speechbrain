# ################################
# Model: SepFormer for source separation
# https://arxiv.org/abs/2010.13154
#
# Dataset : WSJ0-mix
# ################################
# Basic parameters
# Seed needs to be set at top of yaml, before objects with parameters are made
#
seed: 1234
__set_seed: !apply:torch.manual_seed [!ref <seed>]

# Data params
data_folder: '/network/tmp1/subakany/wsj0-mix/2speakers' # wsj2mix or wsj3mix
experiment_name: 1-dprnn
output_folder: !ref results/<experiment_name>/<seed>
train_log: !ref <output_folder>/train_log.txt
save_folder: !ref <output_folder>/save
tr_csv: !ref <data_folder>/wsj_tr.csv
cv_csv: !ref <data_folder>/wsj_cv.csv
tt_csv: !ref <data_folder>/wsj_tt.csv

# Experiment params
auto_mix_prec: True
device: 'cuda:0'
test_only: False
num_spks: 2 # set to 3 for wsj0-3mix
sentence_sorting: random
progressbar: True
save_audio: True # Save estimated sources on disk
audio_to_save: 10 # Saves only N audio files
sample_rate: 8000

# Training parameters
N_epochs: 200
N_batch: 1
lr: 0.00015
clip_grad_norm: 5
loss_upper_lim: 999999  # this is the upper limit for an acceptable loss
# if True, the training sequences are cut to a specified length
limit_training_signal_len: False
# this is the length of sequences if we choose to limit
# the signal length of training sequences
training_signal_len: 32000


# Augment parameters
use_wavedrop: False
use_speedperturb: False
use_rand_shift: False
min_shift: -8000
max_shift: 8000

# Neural parameters
N_encoder_out: 256
out_channels: 256
kernel_size: 16
kernel_stride: 8

# Data preparation will generate train.csv, dev.csv, and test.csv files
__data_prep: !apply:speechbrain.utils.data_utils.prepare_data
    prep_function: !name:prepare_data.prepare_wsjmix
        datapath: !ref <data_folder>
        savepath: !ref <data_folder>
        n_spks: !ref <num_spks>

# Dataloaders
train_loader: !new:speechbrain.data_io.data_io.DataLoaderFactory
    csv_file: !ref <tr_csv>
    batch_size: !ref <N_batch>
    sentence_sorting: !ref <sentence_sorting>
    csv_read: [mix_wav, s1_wav, s2_wav] # add s3_wav for wsj3mix

valid_loader: !new:speechbrain.data_io.data_io.DataLoaderFactory
    csv_file: !ref <cv_csv>
    batch_size: !ref <N_batch>
    sentence_sorting: !ref <sentence_sorting>
    csv_read: [mix_wav, s1_wav, s2_wav] # add s3_wav for wsj3mix

test_loader: !new:speechbrain.data_io.data_io.DataLoaderFactory
    csv_file: !ref <tt_csv>
    batch_size: 1 # must be 1 for a correct eval
    sentence_sorting: !ref <sentence_sorting>
    csv_read: [mix_wav, s1_wav, s2_wav] # add s3_wav for wsj3mix

speedperturb: !new:speechbrain.lobes.augment.TimeDomainSpecAugment
    perturb_prob: 1.0
    drop_freq_prob: 0.0
    drop_chunk_prob: 0.0
    sample_rate: !ref <sample_rate>
    speeds: [95, 100, 105]

wavedrop: !new:speechbrain.lobes.augment.TimeDomainSpecAugment
    perturb_prob: 0.0
    drop_freq_prob: 1.0
    drop_chunk_prob: 1.0
    sample_rate: !ref <sample_rate>


Encoder: !new:speechbrain.lobes.models.dual_path.Encoder
    kernel_size: !ref <kernel_size>
    out_channels: !ref <N_encoder_out>


intra: !new:speechbrain.lobes.models.dual_path.SBRNNBlock
    num_layers: 1
    input_size: !ref <out_channels>
    hidden_channels: !ref <out_channels>
    dropout: 0
    bidirectional: True

inter: !new:speechbrain.lobes.models.dual_path.SBRNNBlock
    num_layers: 1
    input_size: !ref <out_channels>
    hidden_channels: !ref <out_channels>
    dropout: 0
    bidirectional: True

MaskNet: !new:speechbrain.lobes.models.dual_path.Dual_Path_Model
    num_spks: !ref <num_spks>
    in_channels: !ref <N_encoder_out>
    out_channels: !ref <out_channels>
    num_layers: 6
    K: 250
    intra_model: !ref <intra>
    inter_model: !ref <inter>
    norm: ln
    linear_layer_after_inter_intra: True
    skip_around_intra: True

Decoder: !new:speechbrain.lobes.models.dual_path.Decoder
    in_channels: !ref <N_encoder_out>
    out_channels: 1
    kernel_size: !ref <kernel_size>
    stride: !ref <kernel_stride>
    bias: False

optimizer: !name:torch.optim.Adam
    lr: !ref <lr>
    weight_decay: 0

loss: !name:speechbrain.nnet.losses.get_si_snr_with_pitwrapper

lr_scheduler: !new:speechbrain.nnet.schedulers.ReduceLROnPlateau
    factor: 0.5
    patience: 2

epoch_counter: !new:speechbrain.utils.epoch_loop.EpochCounter
    limit: !ref <N_epochs>

modules:
    encoder: !ref <Encoder>
    decoder: !ref <Decoder>
    masknet: !ref <MaskNet>

checkpointer: !new:speechbrain.utils.checkpoints.Checkpointer
    checkpoints_dir: !ref <save_folder>
    recoverables:
        encoder: !ref <Encoder>
        decoder: !ref <Decoder>
        masknet: !ref <MaskNet>
        counter: !ref <epoch_counter>
        lr_scheduler: !ref <lr_scheduler>

train_logger: !new:speechbrain.utils.train_logger.FileTrainLogger
    save_file: !ref <train_log>
